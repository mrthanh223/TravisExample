# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.19.3"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    
    
  end


  # desc "Runs all the tests"
  # lane :test do
  #   scan
  # end

desc "Creating a code signing certificate and provisioning profile"
# 2
lane :provision do
  # 3
  produce(
    app_name: 'KIDYLAND',
    language: 'English',
    app_version: '1.0',
    sku: '123abc'
  )
  # 4
  cert
  # 5
  # sigh(force: true)
  # sigh(adhoc: true)
   sigh(
      adhoc: true,
      # Fastlane has issues forcing AdHoc profiles
      force: false
    )

end

error do |lane, exception|
# This block is called if there was an error running a lane.
end

desc "Submit a new Beta build to Hockey App"
lane :beta do
  # snapshot
  # keychain_name = "ci-example-certs"
   # ensure_git_status_clean
   increment_build_number(build_number: number_of_commits)
   provision
    # Build
  gym(
      # scheme: target,
      clean: true,
      output_directory: "./fastlane/build"
    )
#       # configuration: "AdHoc",
#       scheme: "Release",
#       # both of these flags are required for ad hoc
#       # export_method: 'ad-hoc',
#       # use_legacy_build_api: true
# )
  

end

  # desc "Deploy a new version to the App Store"
  # lane :release do
  #   # match(type: "appstore")
  #   snapshot
  #   gym(scheme: "KidLearningFastlance") # Build your app - more options available
  #   # deliver(force: true)
  #   # frameit
  # end

  # # You can define as many lanes as you want

  # after_all do |lane|
  #   # This block is called, only if the executed lane was successful

  #   # slack(
  #   #   message: "Successfully deployed new App Update."
  #   # )
  # end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
